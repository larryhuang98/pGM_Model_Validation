#!/bin/bash

#SBATCH --job-name=serial-nve
#SBATCH --output=sander-test_%j.out
#SBATCH --error=sander-test_%j.err
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=4
#SBATCH --cpus-per-task=1
#SBATCH --mem=6G
#SBATCH --time=10000:00:00
#SBATCH --partition=cpu


# Load mpi environment

export PATH=/home/larry/apps/openmpi/3.1.6/bin/:$PATH
export LD_LIBRARY_PATH=/home/larry/apps/openmpi/3.1.6/lib/:$LD_LIBRARY_PATH

# Environment variables setup
if [ -z "$TESTsander" ]; then
    TESTsander="/home/larry/amber24/bin/sander.MPI"
fi

if [ -z "$DO_PARALLEL" ]; then
    DO_PARALLEL="mpirun -np 4 "
    #DO_PARALLEL=" "
fi

# Prepare input file
cat > mdin <<EOF
 single point calc.
 &cntrl
   imin=0, nstlim=1000,
   irest=1, ntx=5,
   ntt=0, temp0=300,
   ntb=1, ntp=0,
   ntc=2, ntf=2, tol=0.000001,
   cut=9.,
   ntpr=100, ntwr=1000, ntwx=1000,
   dt=0.001,
   ipgm=1,
 /
 &ewald
  skinnb=2.,ew_coeff=0.4,nfft1=30,nfft2=30,nfft3=30,order=5,vdwmeth=0
 /
 &pol_gauss
   pol_gauss_verbose=0,ee_dsum_cut=9.0,
   dipole_scf_tol=0.01,dipole_scf_init=3,dipole_scf_init_order=2,dipole_scf_init_step=4,
   scf_solv_opt=3,scf_sor_niter=100,scf_sor_coefficient=0.65,
   scf_cg_niter=50,scf_local_niter=3,scf_local_cut=4.0
 /
EOF

# Execute the program
$DO_PARALLEL $TESTsander -O -i mdin -p pGM.prmtop -c pGM-old.restrt0 -o test_mpi_best.out
